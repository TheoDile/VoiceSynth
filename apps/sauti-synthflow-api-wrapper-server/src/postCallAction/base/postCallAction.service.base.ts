/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PostCallAction as PrismaPostCallAction } from "@prisma/client";

export class PostCallActionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PostCallActionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.postCallAction.count(args);
  }

  async postCallActions<T extends Prisma.PostCallActionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostCallActionFindManyArgs>
  ): Promise<PrismaPostCallAction[]> {
    return this.prisma.postCallAction.findMany<Prisma.PostCallActionFindManyArgs>(
      args
    );
  }
  async postCallAction<T extends Prisma.PostCallActionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostCallActionFindUniqueArgs>
  ): Promise<PrismaPostCallAction | null> {
    return this.prisma.postCallAction.findUnique(args);
  }
  async createPostCallAction<T extends Prisma.PostCallActionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostCallActionCreateArgs>
  ): Promise<PrismaPostCallAction> {
    return this.prisma.postCallAction.create<T>(args);
  }
  async updatePostCallAction<T extends Prisma.PostCallActionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostCallActionUpdateArgs>
  ): Promise<PrismaPostCallAction> {
    return this.prisma.postCallAction.update<T>(args);
  }
  async deletePostCallAction<T extends Prisma.PostCallActionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostCallActionDeleteArgs>
  ): Promise<PrismaPostCallAction> {
    return this.prisma.postCallAction.delete(args);
  }
}
